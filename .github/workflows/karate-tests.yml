name: Karate API Tests CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'src/test/resources/features/**/*.feature'
      - 'src/test/resources/features/**/*.json'
      - 'src/test/resources/features/**/*.js'
      - 'src/test/java/features/**'
      - 'pom.xml'
          

  pull_request:
    branches: [ main ]
    paths:
      - 'src/test/resources/features/**/*.feature'
      - 'src/test/resources/features/**/*.json'
      - 'src/test/resources/features/**/*.js'
      - 'src/test/java/features/**'
      - 'pom.xml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build project
        run: mvn clean install -DskipTests=true

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Karate tests
        run: mvn clean test

      - name: Upload Karate HTML reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: karate-report
          path: target/karate-reports

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Simulate Deployment
        run: echo "Deploying application..."
